# Copyright (c) 2015 Robert Bamler <robert.bamler -AT- gmail.com>

VALID_TOOLCHAINS := pnacl newlib glibc clang-newlib linux

TARGET = k2pdfopt


include $(NACL_SDK_ROOT)/tools/common.mk

LIBS = willuslib \
  nacl_io \
  ppapi_cpp \
  ppapi \
  mupdf \
  jbig2dec \
  freetype \
  openjpeg \
  png \
  jpeg \
  z \
  bz2 \
  pthread

CFLAGS = -D__NACL__ \
  -Wall \
  -Wno-char-subscripts \
  -Ik2pdfopt/include_mod \
  -Ik2pdfopt/willuslib \
  -Ik2pdfopt/k2pdfoptlib

# Since k2pdfopt/k2pdfoptlib/k2file.c calls pp_post_progress from
# k2pdfopt/k2pdfopt_module.c, it does not make any sense to compile
# k2pdfoptlib as a separate library. Instead, we link directly into
# the final "k2pdfopt.pexe".

SOURCES = k2pdfopt/k2pdfopt_module.c \
  k2pdfopt/k2pdfopt_nacl.c \
  k2pdfopt/queue.c \
  k2pdfopt/k2pdfoptlib/bmpregion.c \
  k2pdfopt/k2pdfoptlib/devprofile.c \
  k2pdfopt/k2pdfoptlib/k2bmp.c \
  k2pdfopt/k2pdfoptlib/k2file.c \
  k2pdfopt/k2pdfoptlib/k2files.c \
  k2pdfopt/k2pdfoptlib/k2gui.c \
  k2pdfopt/k2pdfoptlib/k2gui_cbox.c \
  k2pdfopt/k2pdfoptlib/k2gui_osdep.c \
  k2pdfopt/k2pdfoptlib/k2gui_overlay.c \
  k2pdfopt/k2pdfoptlib/k2mark.c \
  k2pdfopt/k2pdfoptlib/k2master.c \
  k2pdfopt/k2pdfoptlib/k2mem.c \
  k2pdfopt/k2pdfoptlib/k2menu.c \
  k2pdfopt/k2pdfoptlib/k2ocr.c \
  k2pdfopt/k2pdfoptlib/k2parsecmd.c \
  k2pdfopt/k2pdfoptlib/k2proc.c \
  k2pdfopt/k2pdfoptlib/k2publish.c \
  k2pdfopt/k2pdfoptlib/k2settings2cmd.c \
  k2pdfopt/k2pdfoptlib/k2settings.c \
  k2pdfopt/k2pdfoptlib/k2sys.c \
  k2pdfopt/k2pdfoptlib/k2usage.c \
  k2pdfopt/k2pdfoptlib/k2version.c \
  k2pdfopt/k2pdfoptlib/pagelist.c \
  k2pdfopt/k2pdfoptlib/pageregions.c \
  k2pdfopt/k2pdfoptlib/textrows.c \
  k2pdfopt/k2pdfoptlib/textwords.c \
  k2pdfopt/k2pdfoptlib/userinput.c \
  k2pdfopt/k2pdfoptlib/wrapbmp.c

# Build rules generated by macros from common.mk:

$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))

# The PNaCl workflow uses both an unstripped and finalized/stripped binary.
# On NaCl, only produce a stripped binary for Release configs (not Debug).
ifneq (,$(or $(findstring pnacl,$(TOOLCHAIN)),$(findstring Release,$(CONFIG))))
$(eval $(call LINK_RULE,$(TARGET)_unstripped,$(SOURCES),$(LIBS),$(DEPS)))
$(eval $(call STRIP_RULE,$(TARGET),$(TARGET)_unstripped))
else
$(eval $(call LINK_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif

$(eval $(call NMF_RULE,$(TARGET),))
