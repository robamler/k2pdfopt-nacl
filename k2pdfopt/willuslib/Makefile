# GNU Makefile based on shared rules provided by the Native Client SDK.
# For more details, see
# https://developer.chrome.com/native-client/devguide/tutorial/tutorial-part2

VALID_TOOLCHAINS := pnacl newlib glibc clang-newlib linux

TARGET = willuslib

include $(NACL_SDK_ROOT)/tools/common.mk

# CHROME_ARGS += --allow-nacl-socket-api=localhost

DEPS = nacl_io
LIBS = nacl_io

CFLAGS = -D__NACL__ \
  -Wall \
  -Wno-char-subscripts \
  -Wno-unused-function \
  -I../include_mod \
  -I../k2pdfoptlib \
  -I../../mupdf/include \
  -I. \
  -I..

SOURCES = ansi.c \
  array.c \
  bmp.c \
  bmpmupdf.c \
  dtcompress.c \
  filelist.c \
  fontdata.c \
  fontrender.c \
  gslpolyfit.c \
  linux.c \
  math.c \
  mem.c \
  ocr.c \
  ocrjocr.c \
  ocrtess.c \
  pdfwrite.c \
  point2d.c \
  render.c \
  strbuf.c \
  string.c \
  token.c \
  wfile.c \
  wgs.c \
  wgui.c \
  willusversion.c \
  winbmp.c \
  win.c \
  wincomdlg.c \
  winmbox.c \
  winshell.c \
  wmupdf.c \
  wpdf.c \
  wsys.c \
  wzfile.c


# Build rules generated by macros from common.mk:

$(foreach dep,$(DEPS),$(eval $(call DEPEND_RULE,$(dep))))
$(foreach src,$(SOURCES),$(eval $(call COMPILE_RULE,$(src),$(CFLAGS))))
$(eval $(call LIB_RULE,$(TARGET),$(SOURCES)))

ifneq (,$(findstring $(TOOLCHAIN),glibc bionic))
$(eval $(call SO_RULE,$(TARGET),$(SOURCES),$(LIBS),$(DEPS)))
endif
